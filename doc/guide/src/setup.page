---
title: Starting the system up
sort_info: 50
--- name:content pipeline:tags,markdown,blocks

Setting up CORBA
----------------

The CORBA communication layer is set up through the Orocos.initialize call. The
general header for an orocos.rb script is therefore:

{coderay:: ruby}
require 'orocos'
include Orocos
Orocos.initialize
{coderay}

It will connect to the default CORBA name server (in general, localhost), and
will raise if the name server can't be found.

If you want to use another name server, for instance because you have a system
spread on multiple machines and you want to manipulate modules on the various
machines, you have to set the {rdoc_class: CORBA.name_service} value
_before_ you call Orocos.initialize:

{coderay:: ruby}
require 'orocos'
include Orocos
Orocos::CORBA.name_service = "robot.local"
Orocos.initialize
{coderay}

Finally, the CORBA.call\_timeout and CORBA.connect\_timeout
specify timeouts at the CORBA level. See the {rdoc_class: CORBA} documentation
for more information.

Starting processes _(oroGen-based modules only)_
------------------------------------------------

Orocos.rb has the ability to start deployments that are generated by oroGen
projects. The general syntax for that is:

{coderay:: ruby}
Orocos.run 'deployment1', 'deployment2' do |p1, p2|
end
{coderay}

where <tt>deployment1</tt> and <tt>deployment2</tt> are the names of the
deployments. In the above code snippet, the <tt>p1</tt> and <tt>p2</tt>
variables are the instances of {rdoc_class: Process} that represent the
processes.

Orocos.run waits for all the processes to be up and running, and will raise an
exception if one fails to start, i.e. crashes or fails to start within a
specified timeout (5s by default). This timeout can be changed with the :timeout
option:

{coderay:: ruby}
Orocos.run 'deployment1', 'deployment2', :timeout => 10 do |p1, p2|
end
{coderay}

Orocos.run can also redirect the process outputs to files, and run them in
valgrind. See the {rdoc_class: {name: Orocos, base_module: '', text:
"documentation of the Orocos moduule"}} for more information.

